version: 2.1

orbs:
  node: circleci/node@5.0.2
  terraform: circleci/terraform@3.0.1
  aws-cli: circleci/aws-cli@3.1.0

jobs:
  test:
    docker:
      - image: cimg/node:18.0
    steps:
      # Checkout the code from the repo
      - checkout
      # Install and cache dependencies from package.json
      - node/install-packages
      # Run the tests
      - run:
          name: Run tests
          command: |
            npm start & 
            npm test

  build:
    docker:
      # - image: docker:18.06.3-ce-git # enable the docker build support
      - image: cimg/node:18.0
    environment:
      PROJECT_NAME: diag_upload_service
    steps:
      # Checkout the code from the repo
      - checkout
      # Enable Docker in Docker
      - setup_remote_docker
      # Setup AWS CLI
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Build and Push Image
          command: |
            docker --version
            export ECR_REPO_URL=$(aws ecr describe-repositories --query "repositories[?repositoryName=='$PROJECT_NAME'].repositoryUri" --output text)
            export ECR_REPO_NAME=$PROJECT_NAME
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $ECR_REPO_URL
            docker build -t $ECR_REPO_NAME .
            docker tag $ECR_REPO_NAME:latest $ECR_REPO_URL:$CIRCLE_BRANCH-$CIRCLE_SHA1
            docker push $ECR_REPO_URL:$CIRCLE_BRANCH-$CIRCLE_SHA1
            echo "Docker build sucessful for $ECR_REPO_NAME $CIRCLE_BRANCH-$CIRCLE_SHA1"

workflows:
  test_build_and_deploy:
    jobs:
      - test
      - build:
          # Attach to CircleCI context that contains AWS key and ID
          context: aws
          requires:
            - test
      - terraform/fmt:
          path: ./terraform
          checkout: true
      - terraform/validate:
          path: ./terraform
          checkout: true
          context: aws
          requires:
            - terraform/fmt
      - terraform/plan:
          var: ecr_image_tag=main
          path: ./terraform
          checkout: true
          context: aws
          persist-workspace: true
          pre-steps:
            - run:
                command: |
                  pwd
                  ls -lah
                  sed -i -E 's/(ecr_image_tag\s+= \")(main)\"/\1'"$CIRCLE_BRANCH-$CIRCLE_SHA1"'\"/g' ./terraform/terraform.tfvars
          requires:
            - terraform/validate
      - hold:
          type: approval
          filters:
            branches:
              only: main
          requires:
            - terraform/plan
            - build
      - terraform/apply:
          var: ecr_image_tag=main
          path: ./terraform
          attach-workspace: true
          context: aws
          filters:
            branches:
              only: main
          requires:
            - hold
